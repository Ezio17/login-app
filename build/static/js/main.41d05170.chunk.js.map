{"version":3,"sources":["context.jsx","components/Login.jsx","components/SingUp.jsx","components/HomePage.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["usersContext","React","createContext","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","users","isAuthorithed","handleChangeEmail","bind","assertThisInitialized","handleChangePassword","sendData","event","setState","target","value","preventDefault","_this$state","i","length","context","getEmail","alert","_this2","fetch","then","response","json","_this$state2","react_default","a","createElement","className","htmlFor","type","id","aria-describedby","placeholder","onChange","onClick","Component","contextType","UsersContext","SignUp","firstName","lastName","confirmPassword","equalPassword","checkMail","handleChangeFirstName","handleChangeLastName","handleChangeConfirmPassword","createUser","user","method","body","JSON","stringify","required","HomePage","Fragment","map","key","Header","SingOut","undefined","react_router_dom","to","App","basename","process","Provider","components_Header","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8RAIeA,EAFMC,IAAMC,gBCErBC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,eAAe,GAGjBX,EAAKY,kBAAoBZ,EAAKY,kBAAkBC,KAAvBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACzBA,EAAKe,qBAAuBf,EAAKe,qBAAqBF,KAA1BZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAC5BA,EAAKgB,SAAWhB,EAAKgB,SAASH,KAAdZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAZCA,iFAiBDiB,GAChBd,KAAKe,SAAS,CAAEV,MAAOS,EAAME,OAAOC,qDAGjBH,GACnBd,KAAKe,SAAS,CAAET,SAAUQ,EAAME,OAAOC,yCAGhCH,GACPA,EAAMI,iBAGN,IAJc,IAAAC,EAEqBnB,KAAKI,MAAhCC,EAFMc,EAENd,MAAOC,EAFDa,EAECb,SAAUC,EAFXY,EAEWZ,MAEhBa,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAChC,GAAIb,EAAMa,GAAGf,QAAUA,GAASE,EAAMa,GAAGd,WAAaA,EAMpD,OALAN,KAAKe,SAAS,CACZP,eAAe,SAGjBR,KAAKsB,QAAQC,SAAShB,EAAMa,GAAGf,OAKnCmB,MAAM,uLAGY,IAAAC,EAAAzB,KAClB0B,MAAM,mCACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAApB,GACJkB,EAAKV,SAAS,CACZR,6CAKC,IAAAuB,EACqB9B,KAAKI,MAAzBC,EADDyB,EACCzB,MAAOC,EADRwB,EACQxB,SAEf,OACEyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,YAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,iBACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACLF,UAAU,eACVG,GAAG,QACHC,mBAAiB,YACjBC,YAAY,cACZtB,MAAOZ,EACPmC,SAAUxC,KAAKS,qBAGnBsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLF,UAAU,eACVG,GAAG,WACHE,YAAY,WACZtB,MAAOX,EACPkC,SAAUxC,KAAKY,wBAGnBmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEbH,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLF,UAAU,kBACVO,QAASzC,KAAKa,UAHhB,sBA1FIpB,IAAMiD,WAApB/C,EAgBGgD,YAAcC,EA0FRjD,QC+FAkD,cA1Mb,SAAAA,EAAYjD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACjBhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,KAAMJ,KAEDQ,MAAQ,CACX0C,UAAW,GACXC,SAAU,GACV1C,MAAO,GACPC,SAAU,GACV0C,gBAAiB,GACjBC,eAAe,EACfC,WAAW,EACX3C,MAAO,IAGTV,EAAKsD,sBAAwBtD,EAAKsD,sBAAsBzC,KAA3BZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAC7BA,EAAKuD,qBAAuBvD,EAAKuD,qBAAqB1C,KAA1BZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAC5BA,EAAKY,kBAAoBZ,EAAKY,kBAAkBC,KAAvBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACzBA,EAAKe,qBAAuBf,EAAKe,qBAAqBF,KAA1BZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAC5BA,EAAKwD,4BAA8BxD,EAAKwD,4BAA4B3C,KAAjCZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACnCA,EAAKyD,WAAazD,EAAKyD,WAAW5C,KAAhBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAnBDA,qFAsBGiB,GACpBd,KAAKe,SAAS,CAAE+B,UAAWhC,EAAME,OAAOC,qDAGrBH,GACnBd,KAAKe,SAAS,CAAEgC,SAAUjC,EAAME,OAAOC,kDAGvBH,GAChBd,KAAKe,SAAS,CAAEV,MAAOS,EAAME,OAAOC,qDAGjBH,GACnBd,KAAKe,SAAS,CAAET,SAAUQ,EAAME,OAAOC,4DAGbH,GAC1Bd,KAAKe,SAAS,CAAEiC,gBAAiBlC,EAAME,OAAOC,yCAGvCH,GACPA,EAAMI,iBAEN,IAHc,IAAAC,EAE2DnB,KAAKI,MAAtE0C,EAFM3B,EAEN2B,UAAWC,EAFL5B,EAEK4B,SAAU1C,EAFfc,EAEed,MAAOC,EAFtBa,EAEsBb,SAAU0C,EAFhC7B,EAEgC6B,gBAAiBzC,EAFjDY,EAEiDZ,MACtDa,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAAK,CACrC,GAAIb,EAAMa,GAAGf,QAAUA,EAKrB,YAJAL,KAAKe,SAAS,CACZmC,WAAW,IAMflD,KAAKe,SAAS,CACZmC,WAAW,IAIf,IAAID,GAAgB,EACpB,GAAI3C,IAAa0C,EAKf,OAJAC,GAAgB,OAChBjD,KAAKe,SAAS,CACZkC,kBAKJ,GAAkB,KAAdH,GACW,KAAbC,GACU,KAAV1C,GACa,KAAbC,GACoB,KAApB0C,EAJF,CASA,IAAIO,EAAO,CACTT,YACAC,WACA1C,QACAC,WACA0C,mBAGFhD,KAAKe,SAAS,CACZ+B,UAAW,GACXC,SAAU,GACV1C,MAAO,GACPC,SAAU,GACV0C,gBAAiB,KAGnBhD,KAAKsD,WAAWC,GAChB/B,MAAM,6KArBJA,MAAM,yIAwBC+B,GACT7B,MAAM,kCAAmC,CACvC8B,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,iDAIL,IAAA9B,EAAAzB,KAClB0B,MAAM,mCACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAApB,GACJkB,EAAKV,SAAS,CACZR,6CAKC,IAAAuB,EAEyC9B,KAAKI,MAD7C0C,EADDhB,EACCgB,UAAWC,EADZjB,EACYiB,SAAU1C,EADtByB,EACsBzB,MAAOC,EAD7BwB,EAC6BxB,SAClC0C,EAFKlB,EAELkB,gBAAiBC,EAFZnB,EAEYmB,cAAeC,EAF3BpB,EAE2BoB,UAElC,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,iBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMI,GAAG,QACPN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,aAAf,cACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLF,UAAU,eACVG,GAAG,YACHE,YAAY,YACZtB,MAAO6B,EACPN,SAAUxC,KAAKmD,sBACfS,UAAQ,KAGZ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,aACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLF,UAAU,eACVG,GAAG,WACHE,YAAY,YACZtB,MAAO8B,EACPP,SAAUxC,KAAKoD,wBAGnBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,sBAAf,iBACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACLF,UAAU,eACVG,GAAG,QACHC,mBAAiB,YACjBC,YAAY,cACZtB,MAAOZ,EACPmC,SAAUxC,KAAKS,oBAEhByC,EAAY,GAAKnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,gCAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,yBAAf,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLF,UAAU,eACVG,GAAG,WACHE,YAAY,WACZtB,MAAOX,EACPkC,SAAUxC,KAAKY,uBAEhBqC,EAAgB,GAAKlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,yBAExBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,mBAAf,oBACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLF,UAAU,eACVG,GAAG,kBACHE,YAAY,WACZtB,MAAO+B,EACPR,SAAUxC,KAAKqD,8BAEhBJ,EAAgB,GAAKlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,yBAExBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLF,UAAU,kBACVO,QAASzC,KAAKa,SAASH,KAAKV,OAH9B,sBA7LKP,IAAMiD,WCErBmB,cACJ,SAAAA,EAAYjE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACjBhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXG,MAAO,IAJQV,mFAQC,IAAA4B,EAAAzB,KAClB0B,MAAM,mCACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAApB,GACJkB,EAAKV,SAAS,CACZR,6CAKC,IACCA,EAAUP,KAAKI,MAAfG,MACAF,EAAUL,KAAKsB,QAAfjB,MACR,OACE0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,cACRN,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aACG1B,EAAMwD,IAAI,SAAAR,GAAI,OACbxB,EAAAC,EAAAC,cAAA,MAAI+B,IAAKT,EAAKlD,OACZ0B,EAAAC,EAAAC,cAAA,MACEC,UAAW7B,IAAUkD,EAAKlD,MAAQ,cAAgB,IAClDkD,EAAKT,WACPf,EAAAC,EAAAC,cAAA,MACEC,UAAW7B,IAAUkD,EAAKlD,MAAQ,cAAgB,IAClDkD,EAAKR,UACPhB,EAAAC,EAAAC,cAAA,MACEC,UAAW7B,IAAUkD,EAAKlD,MAAQ,cAAgB,IAClDkD,EAAKlD,sBA7CJZ,IAAMiD,WAyD7BmB,EAASlB,YAAcC,EAERiB,QC1DTI,cACJ,SAAAA,EAAYrE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiE,IACjBpE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmE,GAAA9D,KAAAH,KAAMJ,KAEDsE,QAAUrE,EAAKqE,QAAQxD,KAAbZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAHEA,yEASjBG,KAAKsB,QAAQC,cAAS4C,oCAGf,IACC9D,EAAUL,KAAKsB,QAAfjB,MACR,OACE0B,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAU,WAAWmC,GAAG,KAA9B,cAESF,IAAV9D,EACC0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACE/B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAU,WAAWmC,GAAG,WAA9B,WACAtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAU,WAAWmC,GAAG,WAA9B,YAEFtC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACE/B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAY7B,GACzB0B,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACElC,UAAU,WACVmC,GAAG,IACH5B,QAASzC,KAAKkE,SAHhB,yBA/BCzE,IAAMiD,WAArBuB,EAOGtB,YAAcC,EAuCRqB,QCFAK,cAtCb,SAAAA,EAAY1E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACjBzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,WAAO8D,GAGTtE,EAAK0B,SAAW1B,EAAK0B,SAASb,KAAdZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAPCA,wEAUVQ,GAEPL,KAAKe,SAAS,CACZV,2CAKF,IAAMY,EAAQ,CACZZ,MAAOL,KAAKI,MAAMC,MAClBkB,SAAUvB,KAAKuB,UAGjB,OACEQ,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAeG,SAAUC,IACvBzC,EAAAC,EAAAC,cAACX,EAAamD,SAAd,CAAuBxD,MAAOA,GAC5Bc,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWhC,IACjCd,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWlF,IAFnC,OAGEoC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWhB,IAH7B,iBA5BQnB,aCEEoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/D,KAAK,SAAAgE,GACjCA,EAAaC","file":"static/js/main.41d05170.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst usersContext = React.createContext();\r\n\r\nexport default usersContext","import React from 'react'\r\n\r\nimport UsersContext from './../context'\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      users: [],\r\n      isAuthorithed: false,\r\n    }\r\n\r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this)\r\n    this.handleChangePassword = this.handleChangePassword.bind(this)\r\n    this.sendData = this.sendData.bind(this)\r\n  }\r\n\r\n  static contextType = UsersContext;\r\n\r\n  handleChangeEmail(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  handleChangePassword(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  sendData(event) {\r\n    event.preventDefault();\r\n    const { email, password, users } = this.state\r\n\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].email === email && users[i].password === password) {\r\n        this.setState({\r\n          isAuthorithed: true,\r\n        })\r\n\r\n        this.context.getEmail(users[i].email)\r\n        return\r\n      }\r\n    }\r\n\r\n    alert('Неверная почта или пароль')\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:5000/api/users')\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        this.setState({\r\n          users,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { email, password } = this.state\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <h1 className=\"registration\">Sign up</h1>\r\n        </div>\r\n        <div className='row justify-content-center'>\r\n          <div className=\"sign-up-block\">\r\n            <form>\r\n              <div className=\"form-group text-center\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={this.handleChangeEmail}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={this.handleChangePassword}\r\n                />\r\n              </div>\r\n              <div className=\"col text-center\">\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.sendData}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      equalPassword: true,\r\n      checkMail: true,\r\n      users: [],\r\n    }\r\n\r\n    this.handleChangeFirstName = this.handleChangeFirstName.bind(this)\r\n    this.handleChangeLastName = this.handleChangeLastName.bind(this)\r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this)\r\n    this.handleChangePassword = this.handleChangePassword.bind(this)\r\n    this.handleChangeConfirmPassword = this.handleChangeConfirmPassword.bind(this)\r\n    this.createUser = this.createUser.bind(this)\r\n  }\r\n\r\n  handleChangeFirstName(event) {\r\n    this.setState({ firstName: event.target.value });\r\n  }\r\n\r\n  handleChangeLastName(event) {\r\n    this.setState({ lastName: event.target.value });\r\n  }\r\n\r\n  handleChangeEmail(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  handleChangePassword(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  handleChangeConfirmPassword(event) {\r\n    this.setState({ confirmPassword: event.target.value })\r\n  }\r\n\r\n  sendData(event) {\r\n    event.preventDefault();\r\n    const { firstName, lastName, email, password, confirmPassword, users } = this.state\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].email === email) {\r\n        this.setState({\r\n          checkMail: false\r\n        })\r\n\r\n        return\r\n      }\r\n\r\n      this.setState({\r\n        checkMail: true\r\n      })\r\n    }\r\n\r\n    let equalPassword = true;\r\n    if (password !== confirmPassword) {\r\n      equalPassword = false;\r\n      this.setState({\r\n        equalPassword\r\n      })\r\n      return\r\n    }\r\n\r\n    if (firstName === '' ||\r\n      lastName === '' ||\r\n      email === '' ||\r\n      password === '' ||\r\n      confirmPassword === '') {\r\n      alert('Заполните все поля')\r\n      return\r\n    }\r\n\r\n    let user = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n    }\r\n\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    })\r\n\r\n    this.createUser(user)\r\n    alert('Вы успешно зарегистрировались')\r\n  }\r\n\r\n  createUser(user) {\r\n    fetch('http://localhost:5000/api/users', {\r\n      method: 'POST',\r\n      body: JSON.stringify(user),\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:5000/api/users')\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        this.setState({\r\n          users,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, email, password,\r\n      confirmPassword, equalPassword, checkMail } = this.state\r\n\r\n    return (\r\n      <div className=\"container\" >\r\n        <div className=\"row justify-content-center\">\r\n          <h1 className=\"registration\">Registration</h1>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"sign-up-block\">\r\n            <form id=\"form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">First name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"firstName\"\r\n                  placeholder=\"Firs name\"\r\n                  value={firstName}\r\n                  onChange={this.handleChangeFirstName}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"lastName\"\r\n                  placeholder=\"Last name\"\r\n                  value={lastName}\r\n                  onChange={this.handleChangeLastName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={this.handleChangeEmail}\r\n                />\r\n                {checkMail ? '' : <p className=\"password-is-not-equql\">\r\n                  This mail is already in use</p>}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={this.handleChangePassword}\r\n                />\r\n                {equalPassword ? '' : <p className=\"password-is-not-equql\">Password isn't equal</p>}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Password\"\r\n                  value={confirmPassword}\r\n                  onChange={this.handleChangeConfirmPassword}\r\n                />\r\n                {equalPassword ? '' : <p className=\"password-is-not-equql\">Password isn't equal</p>}\r\n              </div>\r\n              <div className=\"col text-center\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.sendData.bind(this)}\r\n                >Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp","import React from 'react'\r\n\r\nimport UsersContext from './../context'\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:5000/api/users')\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        this.setState({\r\n          users,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.state\r\n    const { email } = this.context\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <table id=\"info-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>First Name</th>\r\n                  <th>Last Name</th>\r\n                  <th>Email</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map(user =>\r\n                  <tr key={user.email}>\r\n                    <td\r\n                      className={email === user.email ? 'currentUser' : ''}\r\n                    >{user.firstName}</td>\r\n                    <td\r\n                      className={email === user.email ? 'currentUser' : ''}\r\n                    >{user.lastName}</td>\r\n                    <td\r\n                      className={email === user.email ? 'currentUser' : ''}\r\n                    >{user.email}</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nHomePage.contextType = UsersContext;\r\n\r\nexport default HomePage","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport UsersContext from './../context'\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.SingOut = this.SingOut.bind(this)\r\n  }\r\n\r\n  static contextType = UsersContext;\r\n\r\n  SingOut() {\r\n    this.context.getEmail(undefined)\r\n  }\r\n\r\n  render() {\r\n    const { email } = this.context\r\n    return (\r\n      <header>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <nav className=\"navbar navbar-expand-sm bg-light col-12\">\r\n              <ul className=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                  <Link className=\"nav-link\" to='/'>Home</Link>\r\n                </li>\r\n                {email === undefined ?\r\n                  <>\r\n                    <Link className=\"nav-link\" to='/signin'>Sign in</Link>\r\n                    <Link className=\"nav-link\" to='/signup'>Sign up</Link>\r\n                  </> :\r\n                  <>\r\n                    <p className=\"nav-link\">{email}</p>\r\n                    <Link\r\n                      className=\"nav-link\"\r\n                      to='/'\r\n                      onClick={this.SingOut}\r\n                    >Sing out</Link>\r\n                  </>}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Login from './components/Login'\nimport SignUp from './components/SingUp'\nimport HomePage from './components/HomePage'\nimport UsersContext from './context'\nimport Header from './components/Header'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      email: undefined\n    }\n\n    this.getEmail = this.getEmail.bind(this)\n  }\n\n  getEmail(email) {\n\n    this.setState({\n      email,\n    })\n  }\n\n  render() {\n    const value = {\n      email: this.state.email,\n      getEmail: this.getEmail,\n    }\n\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <UsersContext.Provider value={value}>\n          <Header />\n          <Switch>\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/signin\" component={Login} />} />\n            <Route path=\"/\" component={HomePage} />} />\n          </Switch>\n        </UsersContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}