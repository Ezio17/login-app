{"version":3,"sources":["context.jsx","components/Header.jsx","components/Login.jsx","components/SingUp.jsx","components/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["usersContext","React","createContext","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","SingOut","bind","assertThisInitialized","context","getEmail","undefined","email","react_default","a","createElement","className","react_router_dom","to","Fragment","onClick","Component","contextType","UsersContext","Login","state","password","users","isAuthorithed","handleChangeEmail","handleChangePassword","sendData","event","setState","target","value","preventDefault","_this$state","i","length","alert","_this2","fetch","then","response","json","_this$state2","components_Header","htmlFor","type","id","aria-describedby","placeholder","onChange","SignUp","firstName","lastName","confirmPassword","equalPassword","checkMail","handleChangeFirstName","handleChangeLastName","handleChangeConfirmPassword","createUser","user","method","body","JSON","stringify","required","HomePage","map","key","App","basename","process","Provider","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c36c0de4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst usersContext = React.createContext();\r\n\r\nexport default usersContext","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport UsersContext from './../context'\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.SingOut = this.SingOut.bind(this)\r\n  }\r\n\r\n  static contextType = UsersContext;\r\n\r\n  SingOut() {\r\n    this.context.getEmail(undefined)\r\n  }\r\n\r\n  render() {\r\n    const { email } = this.context\r\n    return (\r\n      <header>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <nav className=\"navbar navbar-expand-sm bg-light col-12\">\r\n              <ul className=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                  <Link className=\"nav-link\" to='/'>Home</Link>\r\n                </li>\r\n                {email === undefined ?\r\n                  <>\r\n                    <Link className=\"nav-link\" to='/signin'>Sign in</Link>\r\n                    <Link className=\"nav-link\" to='/signup'>Sign up</Link>\r\n                  </> :\r\n                  <>\r\n                    <p className=\"nav-link\">{email}</p>\r\n                    <Link\r\n                      className=\"nav-link\"\r\n                      to='/'\r\n                      onClick={this.SingOut}\r\n                    >Sing out</Link>\r\n                  </>}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nimport Header from './Header'\r\nimport UsersContext from './../context'\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      users: [],\r\n      isAuthorithed: false,\r\n    }\r\n\r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this)\r\n    this.handleChangePassword = this.handleChangePassword.bind(this)\r\n    this.sendData = this.sendData.bind(this)\r\n  }\r\n\r\n  static contextType = UsersContext;\r\n\r\n  handleChangeEmail(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  handleChangePassword(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  sendData(event) {\r\n    event.preventDefault();\r\n    const { email, password, users } = this.state\r\n\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].email === email && users[i].password === password) {\r\n        this.setState({\r\n          isAuthorithed: true,\r\n        })\r\n\r\n        this.context.getEmail(users[i].email)\r\n        return\r\n      }\r\n    }\r\n\r\n    alert('Неверная почта или пароль')\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:5000/api/users')\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        this.setState({\r\n          users,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { email, password } = this.state\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        <div className=\"row justify-content-center\">\r\n          <h1 className=\"registration\">Sign up</h1>\r\n        </div>\r\n        <div className='row justify-content-center'>\r\n          <div className=\"sign-up-block\">\r\n            <form>\r\n              <div className=\"form-group text-center\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={this.handleChangeEmail}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={this.handleChangePassword}\r\n                />\r\n              </div>\r\n              <div className=\"col text-center\">\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.sendData}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n\r\nimport Header from './Header'\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      equalPassword: true,\r\n      checkMail: true,\r\n      users: [],\r\n    }\r\n\r\n    this.handleChangeFirstName = this.handleChangeFirstName.bind(this)\r\n    this.handleChangeLastName = this.handleChangeLastName.bind(this)\r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this)\r\n    this.handleChangePassword = this.handleChangePassword.bind(this)\r\n    this.handleChangeConfirmPassword = this.handleChangeConfirmPassword.bind(this)\r\n    this.createUser = this.createUser.bind(this)\r\n  }\r\n\r\n  handleChangeFirstName(event) {\r\n    this.setState({ firstName: event.target.value });\r\n  }\r\n\r\n  handleChangeLastName(event) {\r\n    this.setState({ lastName: event.target.value });\r\n  }\r\n\r\n  handleChangeEmail(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  handleChangePassword(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  handleChangeConfirmPassword(event) {\r\n    this.setState({ confirmPassword: event.target.value })\r\n  }\r\n\r\n  sendData(event) {\r\n    event.preventDefault();\r\n    const { firstName, lastName, email, password, confirmPassword, users } = this.state\r\n    for (let i = 0; i < users.length; i++) {\r\n      if (users[i].email === email) {\r\n        this.setState({\r\n          checkMail: false\r\n        })\r\n\r\n        return\r\n      }\r\n\r\n      this.setState({\r\n        checkMail: true\r\n      })\r\n    }\r\n\r\n    let equalPassword = true;\r\n    if (password !== confirmPassword) {\r\n      equalPassword = false;\r\n      this.setState({\r\n        equalPassword\r\n      })\r\n      return\r\n    }\r\n\r\n    if (firstName === '' ||\r\n      lastName === '' ||\r\n      email === '' ||\r\n      password === '' ||\r\n      confirmPassword === '') {\r\n      alert('Заполните все поля')\r\n      return\r\n    }\r\n\r\n    let user = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n    }\r\n\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    })\r\n\r\n    this.createUser(user)\r\n    alert('Вы успешно зарегистрировались')\r\n  }\r\n\r\n  createUser(user) {\r\n    fetch('http://localhost:5000/api/users', {\r\n      method: 'POST',\r\n      body: JSON.stringify(user),\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:5000/api/users')\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        this.setState({\r\n          users,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, email, password,\r\n      confirmPassword, equalPassword, checkMail } = this.state\r\n\r\n    return (\r\n      <div className=\"container\" >\r\n        <Header />\r\n        <div className=\"row justify-content-center\">\r\n          <h1 className=\"registration\">Registration</h1>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"sign-up-block\">\r\n            <form id=\"form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">First name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"firstName\"\r\n                  placeholder=\"Firs name\"\r\n                  value={firstName}\r\n                  onChange={this.handleChangeFirstName}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"lastName\"\r\n                  placeholder=\"Last name\"\r\n                  value={lastName}\r\n                  onChange={this.handleChangeLastName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={this.handleChangeEmail}\r\n                />\r\n                {checkMail ? '' : <p className=\"password-is-not-equql\">\r\n                  This mail is already in use</p>}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={this.handleChangePassword}\r\n                />\r\n                {equalPassword ? '' : <p className=\"password-is-not-equql\">Password isn't equal</p>}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Password\"\r\n                  value={confirmPassword}\r\n                  onChange={this.handleChangeConfirmPassword}\r\n                />\r\n                {equalPassword ? '' : <p className=\"password-is-not-equql\">Password isn't equal</p>}\r\n              </div>\r\n              <div className=\"col text-center\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.sendData.bind(this)}\r\n                >Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp","import React from 'react'\r\n\r\nimport Header from './Header'\r\nimport UsersContext from './../context'\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:5000/api/users')\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        this.setState({\r\n          users,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.state\r\n    const { email } = this.context\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <table id=\"info-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>First Name</th>\r\n                  <th>Last Name</th>\r\n                  <th>Email</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map(user =>\r\n                  <tr key={user.email}>\r\n                    <td\r\n                      className={email === user.email ? 'currentUser' : ''}\r\n                    >{user.firstName}</td>\r\n                    <td\r\n                      className={email === user.email ? 'currentUser' : ''}\r\n                    >{user.lastName}</td>\r\n                    <td\r\n                      className={email === user.email ? 'currentUser' : ''}\r\n                    >{user.email}</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nHomePage.contextType = UsersContext;\r\n\r\nexport default HomePage","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Login from './components/Login'\nimport SignUp from './components/SingUp'\nimport HomePage from './components/HomePage'\nimport UsersContext from './context'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      email: undefined\n    }\n\n    this.getEmail = this.getEmail.bind(this)\n  }\n\n  getEmail(email) {\n\n    this.setState({\n      email,\n    })\n  }\n\n  render() {\n    const value = {\n      email: this.state.email,\n      getEmail: this.getEmail,\n    }\n\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <UsersContext.Provider value={value}>\n          <Switch>\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/signin\" component={Login} />} />\n            <Route path=\"/\" component={HomePage} />} />\n          </Switch>\n        </UsersContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}